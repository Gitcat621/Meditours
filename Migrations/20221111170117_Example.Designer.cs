// <auto-generated />
using System;
using Meditours.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Meditours.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221111170117_Example")]
    partial class Example
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Meditours.Models.Camioneta", b =>
                {
                    b.Property<int>("PkCamioneta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadMax")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("PkCamioneta");

                    b.ToTable("Camioneta");
                });

            modelBuilder.Entity("Meditours.Models.Carrito", b =>
                {
                    b.Property<int>("PkCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FkCamioneta")
                        .HasColumnType("int");

                    b.Property<int>("FkMetodo_pago")
                        .HasColumnType("int");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Metodo_pago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeloCamioneta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio_Final")
                        .HasColumnType("int");

                    b.Property<int?>("metodo_PagoPkMetodo")
                        .HasColumnType("int");

                    b.HasKey("PkCarrito");

                    b.HasIndex("FkCamioneta");

                    b.HasIndex("FkUsuario");

                    b.HasIndex("metodo_PagoPkMetodo");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("Meditours.Models.Metodo_pago", b =>
                {
                    b.Property<int>("PkMetodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkMetodo");

                    b.ToTable("Metodo_pago");
                });

            modelBuilder.Entity("Meditours.Models.Roles", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Meditours.Models.itinerario", b =>
                {
                    b.Property<int>("PkItinerario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("lugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("precio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tiempo")
                        .HasColumnType("int");

                    b.HasKey("PkItinerario");

                    b.ToTable("itinerario");
                });

            modelBuilder.Entity("Meditours.Models.usuario", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkUsuario");

                    b.HasIndex("FkRol");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Meditours.Models.Carrito", b =>
                {
                    b.HasOne("Meditours.Models.Camioneta", "Camioneta")
                        .WithMany()
                        .HasForeignKey("FkCamioneta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meditours.Models.usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("FkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meditours.Models.Metodo_pago", "metodo_Pago")
                        .WithMany()
                        .HasForeignKey("metodo_PagoPkMetodo");

                    b.Navigation("Camioneta");

                    b.Navigation("metodo_Pago");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Meditours.Models.usuario", b =>
                {
                    b.HasOne("Meditours.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
