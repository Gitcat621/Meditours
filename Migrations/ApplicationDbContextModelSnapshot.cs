// <auto-generated />
using Meditours.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Meditours.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Meditours.Models.Camionetas", b =>
                {
                    b.Property<int>("PkCamioneta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urlimg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkCamioneta");

                    b.ToTable("Camionetas");
                });

            modelBuilder.Entity("Meditours.Models.Destinos", b =>
                {
                    b.Property<int>("PkDestino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Urlimg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkDestino");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("Meditours.Models.Itinerarios", b =>
                {
                    b.Property<int>("PkItinerario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<int>("FkCamioneta")
                        .HasColumnType("int");

                    b.Property<int>("HraSalida")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("PkItinerario");

                    b.HasIndex("FkCamioneta");

                    b.ToTable("Itinerarios");
                });

            modelBuilder.Entity("Meditours.Models.Reservas", b =>
                {
                    b.Property<int>("PkReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FkCamioneta")
                        .HasColumnType("int");

                    b.Property<int>("FkDestino")
                        .HasColumnType("int");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int");

                    b.Property<int>("HraSalida")
                        .HasColumnType("int");

                    b.HasKey("PkReserva");

                    b.HasIndex("FkCamioneta");

                    b.HasIndex("FkDestino");

                    b.HasIndex("FkUsuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Meditours.Models.Roles", b =>
                {
                    b.Property<int>("PkRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Meditours.Models.Usuarios", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkUsuario");

                    b.HasIndex("FkRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Meditours.Models.Itinerarios", b =>
                {
                    b.HasOne("Meditours.Models.Camionetas", "Camionetas")
                        .WithMany()
                        .HasForeignKey("FkCamioneta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camionetas");
                });

            modelBuilder.Entity("Meditours.Models.Reservas", b =>
                {
                    b.HasOne("Meditours.Models.Camionetas", "Camionetas")
                        .WithMany()
                        .HasForeignKey("FkCamioneta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meditours.Models.Destinos", "Destinos")
                        .WithMany()
                        .HasForeignKey("FkDestino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Meditours.Models.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("FkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camionetas");

                    b.Navigation("Destinos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Meditours.Models.Usuarios", b =>
                {
                    b.HasOne("Meditours.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
